                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.1 #11255 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module iscntrl
                                      6 	.optsdcc -mpdk13
                                      7 	
                                      8 
                                      9 ; default segment ordering in RAM for linker
                                     10 	.area DATA
                                     11 	.area OSEG (OVR,DATA)
                                     12 
                                     13 ;--------------------------------------------------------
                                     14 ; Public variables in this module
                                     15 ;--------------------------------------------------------
                                     16 	.globl _iscntrl_PARM_1
                                     17 	.globl _iscntrl
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG (ABS)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DATA
      000000                         27 _iscntrl_PARM_1:
      000000                         28 	.ds 2
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable items in ram 
                                     31 ;--------------------------------------------------------
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area CODE
                                     52 ;	../iscntrl.c: 33: int iscntrl (int c)
                                     53 ;	-----------------------------------------
                                     54 ;	 function iscntrl
                                     55 ;	-----------------------------------------
      000000                         56 _iscntrl:
                                     57 ;	../iscntrl.c: 35: return (c < ' ' || c == 0x7f);
      000000r80r0F                   58 	mov	a, _iscntrl_PARM_1+0
      000002 20 29                   59 	sub	a, #0x20
      000004r81r0F                   60 	mov	a, _iscntrl_PARM_1+1
      000006 61 00                   61 	subc	a
      000008 C0 18                   62 	t0sn	f, ov
      00000A 80 2E                   63 	xor	a, #0x80
      00000C 6B 00                   64 	sl	a
      00000E 40 18                   65 	t0sn	f, c
      000010r22r30                   66 	goto	00104$
      000012r80r0F                   67 	mov	a, _iscntrl_PARM_1+0
      000014 7F 2A                   68 	ceqsn	a, #0x7f
      000016r1Er30                   69 	goto	00114$
      000018r81r0F                   70 	mov	a, _iscntrl_PARM_1+1
      00001A 00 2B                   71 	cneqsn	a, #0x00
      00001Cr22r30                   72 	goto	00104$
      00001E                         73 00114$:
      00001Er00r13                   74 	clear	p
      000020r26r30                   75 	goto	00105$
      000022                         76 00104$:
      000022 01 2F                   77 	mov	a, #0x01
      000024r80r0B                   78 	mov	p, a
      000026                         79 00105$:
      000026 00 2F                   80 	mov	a, #0x00
      000028r80r13                   81 	xch	a, p
                                     82 ;	../iscntrl.c: 36: }
      00002A 7A 00                   83 	ret
                                     84 	.area CODE
                                     85 	.area CONST
                                     86 	.area CABS (ABS)
