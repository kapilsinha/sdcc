                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.1 #11255 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _fs2schar
                                      6 	.optsdcc -mpdk13
                                      7 	
                                      8 
                                      9 ; default segment ordering in RAM for linker
                                     10 	.area DATA
                                     11 	.area OSEG (OVR,DATA)
                                     12 
                                     13 ;--------------------------------------------------------
                                     14 ; Public variables in this module
                                     15 ;--------------------------------------------------------
                                     16 	.globl ___fs2slong
                                     17 	.globl ___fs2schar_PARM_1
                                     18 	.globl ___fs2schar
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG (ABS)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DATA
      000000                         28 ___fs2schar_PARM_1:
      000000                         29 	.ds 4
      000004                         30 ___fs2schar_sloc0_1_0:
      000004                         31 	.ds 4
      000008                         32 ___fs2schar_sloc1_1_0:
      000008                         33 	.ds 4
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; absolute external ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DABS (ABS)
                                     41 ;--------------------------------------------------------
                                     42 ; global & static initialisations
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area GSINIT
                                     46 	.area GSFINAL
                                     47 	.area GSINIT
                                     48 ;--------------------------------------------------------
                                     49 ; Home
                                     50 ;--------------------------------------------------------
                                     51 	.area HOME
                                     52 	.area HOME
                                     53 ;--------------------------------------------------------
                                     54 ; code
                                     55 ;--------------------------------------------------------
                                     56 	.area CODE
                                     57 ;	../_fs2schar.c: 87: signed char __fs2schar (float f)
                                     58 ;	-----------------------------------------
                                     59 ;	 function __fs2schar
                                     60 ;	-----------------------------------------
      000000                         61 ___fs2schar:
                                     62 ;	../_fs2schar.c: 89: signed long sl=__fs2slong(f);
      000000r80r0F                   63 	mov	a, ___fs2schar_PARM_1+0
      000002r80r0B                   64 	mov	___fs2slong_PARM_1+0, a
      000004r81r0F                   65 	mov	a, ___fs2schar_PARM_1+1
      000006r81r0B                   66 	mov	___fs2slong_PARM_1+1, a
      000008r82r0F                   67 	mov	a, ___fs2schar_PARM_1+2
      00000Ar82r0B                   68 	mov	___fs2slong_PARM_1+2, a
      00000Cr83r0F                   69 	mov	a, ___fs2schar_PARM_1+3
      00000Er83r0B                   70 	mov	___fs2slong_PARM_1+3, a
      000010r04r2F                   71 	mov	a, #___fs2schar_sloc0_1_0
      000012 72 00                   72 	push	af
      000014r00r38                   73 	call	___fs2slong
      000016 C2 01                   74 	mov	a, sp
      000018 FE 28                   75 	add	a, #-2
      00001A 82 01                   76 	mov	sp, a
      00001Cr84r0F                   77 	mov	a, ___fs2schar_sloc0_1_0+0
      00001Er88r0B                   78 	mov	___fs2schar_sloc1_1_0+0, a
      000020r85r0F                   79 	mov	a, ___fs2schar_sloc0_1_0+1
      000022r89r0B                   80 	mov	___fs2schar_sloc1_1_0+1, a
      000024r86r0F                   81 	mov	a, ___fs2schar_sloc0_1_0+2
      000026r8Ar0B                   82 	mov	___fs2schar_sloc1_1_0+2, a
      000028r87r0F                   83 	mov	a, ___fs2schar_sloc0_1_0+3
      00002Ar8Br0B                   84 	mov	___fs2schar_sloc1_1_0+3, a
                                     85 ;	../_fs2schar.c: 90: if (sl>=SCHAR_MAX)
      00002Cr88r0F                   86 	mov	a, ___fs2schar_sloc1_1_0+0
      00002E 7F 29                   87 	sub	a, #0x7f
      000030r89r0F                   88 	mov	a, ___fs2schar_sloc1_1_0+1
      000032 61 00                   89 	subc	a
      000034r8Ar0F                   90 	mov	a, ___fs2schar_sloc1_1_0+2
      000036 61 00                   91 	subc	a
      000038r8Br0F                   92 	mov	a, ___fs2schar_sloc1_1_0+3
      00003A 61 00                   93 	subc	a
      00003C C0 18                   94 	t0sn	f, ov
      00003E 80 2E                   95 	xor	a, #0x80
      000040 6B 00                   96 	sl	a
      000042 40 18                   97 	t0sn	f, c
      000044r48r30                   98 	goto	00102$
                                     99 ;	../_fs2schar.c: 91: return SCHAR_MAX;
      000046 7F 02                  100 	ret	#0x7f
      000048                        101 00102$:
                                    102 ;	../_fs2schar.c: 92: if (sl<=SCHAR_MIN)
      000048 80 2F                  103 	mov	a, #0x80
      00004Ar88r0C                  104 	sub	a, ___fs2schar_sloc1_1_0+0
      00004C FF 2F                  105 	mov	a, #0xff
      00004Er89r0D                  106 	subc	a, ___fs2schar_sloc1_1_0+1
      000050 FF 2F                  107 	mov	a, #0xff
      000052r8Ar0D                  108 	subc	a, ___fs2schar_sloc1_1_0+2
      000054 FF 2F                  109 	mov	a, #0xff
      000056r8Br0D                  110 	subc	a, ___fs2schar_sloc1_1_0+3
      000058 C0 18                  111 	t0sn	f, ov
      00005A 80 2E                  112 	xor	a, #0x80
      00005C 6B 00                  113 	sl	a
      00005E 40 18                  114 	t0sn	f, c
      000060r64r30                  115 	goto	00104$
                                    116 ;	../_fs2schar.c: 93: return -SCHAR_MIN;
      000062 80 02                  117 	ret	#0x80
      000064                        118 00104$:
                                    119 ;	../_fs2schar.c: 94: return sl;
      000064r88r0F                  120 	mov	a, ___fs2schar_sloc1_1_0+0
                                    121 ;	../_fs2schar.c: 95: }
      000066 7A 00                  122 	ret
                                    123 	.area CODE
                                    124 	.area CONST
                                    125 	.area CABS (ABS)
