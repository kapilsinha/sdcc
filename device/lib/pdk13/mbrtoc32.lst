                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.1 #11255 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtoc32
                                      6 	.optsdcc -mpdk13
                                      7 	
                                      8 
                                      9 ; default segment ordering in RAM for linker
                                     10 	.area DATA
                                     11 	.area OSEG (OVR,DATA)
                                     12 
                                     13 ;--------------------------------------------------------
                                     14 ; Public variables in this module
                                     15 ;--------------------------------------------------------
                                     16 	.globl _mbrtowc
                                     17 	.globl _mbrtoc32_PARM_4
                                     18 	.globl _mbrtoc32_PARM_3
                                     19 	.globl _mbrtoc32_PARM_2
                                     20 	.globl _mbrtoc32_PARM_1
                                     21 	.globl _mbrtoc32
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG (ABS)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DATA
      000000                         31 _mbrtoc32_PARM_1:
      000000                         32 	.ds 2
      000002                         33 _mbrtoc32_PARM_2:
      000002                         34 	.ds 2
      000004                         35 _mbrtoc32_PARM_3:
      000004                         36 	.ds 2
      000006                         37 _mbrtoc32_PARM_4:
      000006                         38 	.ds 2
      000008                         39 _mbrtoc32_wc_65536_16:
      000008                         40 	.ds 4
      00000C                         41 _mbrtoc32_sps_65536_16:
      00000C                         42 	.ds 3
      00000F                         43 _mbrtoc32_sloc0_1_0:
      00000F                         44 	.ds 2
      000011                         45 _mbrtoc32_sloc1_1_0:
      000011                         46 	.ds 2
                                     47 ;--------------------------------------------------------
                                     48 ; overlayable items in ram 
                                     49 ;--------------------------------------------------------
                                     50 ;--------------------------------------------------------
                                     51 ; absolute external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DABS (ABS)
                                     54 ;--------------------------------------------------------
                                     55 ; global & static initialisations
                                     56 ;--------------------------------------------------------
                                     57 	.area HOME
                                     58 	.area GSINIT
                                     59 	.area GSFINAL
                                     60 	.area GSINIT
                                     61 ;--------------------------------------------------------
                                     62 ; Home
                                     63 ;--------------------------------------------------------
                                     64 	.area HOME
                                     65 	.area HOME
                                     66 ;--------------------------------------------------------
                                     67 ; code
                                     68 ;--------------------------------------------------------
                                     69 	.area CODE
                                     70 ;	../mbrtoc32.c: 34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                     71 ;	-----------------------------------------
                                     72 ;	 function mbrtoc32
                                     73 ;	-----------------------------------------
      000000                         74 _mbrtoc32:
                                     75 ;	../mbrtoc32.c: 40: if(!ps)
      000000r86r0F                   76 	mov	a, _mbrtoc32_PARM_4+0
      000002r87r0E                   77 	or	a, _mbrtoc32_PARM_4+1
      000004 00 2A                   78 	ceqsn	a, #0x00
      000006r0Er30                   79 	goto	00102$
                                     80 ;	../mbrtoc32.c: 41: ps = &sps;
      000008r0Cr2F                   81 	mov	a, #(_mbrtoc32_sps_65536_16 + 0)
      00000Ar86r0B                   82 	mov	_mbrtoc32_PARM_4+0, a
      00000Cr07r13                   83 	clear	_mbrtoc32_PARM_4+1
      00000E                         84 00102$:
                                     85 ;	../mbrtoc32.c: 43: if(!pc32)
      00000Er80r0F                   86 	mov	a, _mbrtoc32_PARM_1+0
      000010r81r0E                   87 	or	a, _mbrtoc32_PARM_1+1
      000012 00 2A                   88 	ceqsn	a, #0x00
      000014r36r30                   89 	goto	00104$
                                     90 ;	../mbrtoc32.c: 44: return(mbrtowc(0, s, n, ps));
      000016r00r13                   91 	clear	_mbrtowc_PARM_1+0
      000018r01r13                   92 	clear	_mbrtowc_PARM_1+1
      00001Ar82r0F                   93 	mov	a, _mbrtoc32_PARM_2+0
      00001Cr80r0B                   94 	mov	_mbrtowc_PARM_2+0, a
      00001Er83r0F                   95 	mov	a, _mbrtoc32_PARM_2+1
      000020r81r0B                   96 	mov	_mbrtowc_PARM_2+1, a
      000022r84r0F                   97 	mov	a, _mbrtoc32_PARM_3+0
      000024r80r0B                   98 	mov	_mbrtowc_PARM_3+0, a
      000026r85r0F                   99 	mov	a, _mbrtoc32_PARM_3+1
      000028r81r0B                  100 	mov	_mbrtowc_PARM_3+1, a
      00002Ar86r0F                  101 	mov	a, _mbrtoc32_PARM_4+0
      00002Cr80r0B                  102 	mov	_mbrtowc_PARM_4+0, a
      00002Er87r0F                  103 	mov	a, _mbrtoc32_PARM_4+1
      000030r81r0B                  104 	mov	_mbrtowc_PARM_4+1, a
      000032r00r38                  105 	call	_mbrtowc
      000034 7A 00                  106 	ret
      000036                        107 00104$:
                                    108 ;	../mbrtoc32.c: 46: ret = mbrtowc(&wc, s, n, ps);
      000036r08r2F                  109 	mov	a, #(_mbrtoc32_wc_65536_16 + 0)
      000038r80r0B                  110 	mov	_mbrtowc_PARM_1+0, a
      00003Ar01r13                  111 	clear	_mbrtowc_PARM_1+1
      00003Cr82r0F                  112 	mov	a, _mbrtoc32_PARM_2+0
      00003Er80r0B                  113 	mov	_mbrtowc_PARM_2+0, a
      000040r83r0F                  114 	mov	a, _mbrtoc32_PARM_2+1
      000042r81r0B                  115 	mov	_mbrtowc_PARM_2+1, a
      000044r84r0F                  116 	mov	a, _mbrtoc32_PARM_3+0
      000046r80r0B                  117 	mov	_mbrtowc_PARM_3+0, a
      000048r85r0F                  118 	mov	a, _mbrtoc32_PARM_3+1
      00004Ar81r0B                  119 	mov	_mbrtowc_PARM_3+1, a
      00004Cr86r0F                  120 	mov	a, _mbrtoc32_PARM_4+0
      00004Er80r0B                  121 	mov	_mbrtowc_PARM_4+0, a
      000050r87r0F                  122 	mov	a, _mbrtoc32_PARM_4+1
      000052r81r0B                  123 	mov	_mbrtowc_PARM_4+1, a
      000054r00r38                  124 	call	_mbrtowc
      000056r8Fr0B                  125 	mov	_mbrtoc32_sloc0_1_0+0, a
      000058r80r0F                  126 	mov	a, p
      00005Ar90r0B                  127 	mov	_mbrtoc32_sloc0_1_0+1, a
                                    128 ;	../mbrtoc32.c: 48: if(ret <= MB_LEN_MAX)
      00005C 04 2F                  129 	mov	a, #0x04
      00005Er8Fr0C                  130 	sub	a, _mbrtoc32_sloc0_1_0+0
      000060 00 2F                  131 	mov	a, #0x00
      000062r90r0D                  132 	subc	a, _mbrtoc32_sloc0_1_0+1
      000064 40 18                  133 	t0sn	f, c
      000066r8Ar30                  134 	goto	00106$
                                    135 ;	../mbrtoc32.c: 49: *pc32 = wc;
      000068r80r0F                  136 	mov	a, _mbrtoc32_PARM_1+0
      00006Ar91r0B                  137 	mov	_mbrtoc32_sloc1_1_0+0, a
      00006Cr81r0F                  138 	mov	a, _mbrtoc32_PARM_1+1
      00006Er92r0B                  139 	mov	_mbrtoc32_sloc1_1_0+1, a
      000070r91r0F                  140 	mov	a, _mbrtoc32_sloc1_1_0+0
      000072r80r0B                  141 	mov	p, a
      000074r88r0F                  142 	mov	a, _mbrtoc32_wc_65536_16+0
      000076r80r03                  143 	idxm	p, a
      000078r00r12                  144 	inc	p
      00007Ar89r0F                  145 	mov	a, _mbrtoc32_wc_65536_16+1
      00007Cr80r03                  146 	idxm	p, a
      00007Er00r12                  147 	inc	p
      000080r8Ar0F                  148 	mov	a, _mbrtoc32_wc_65536_16+2
      000082r80r03                  149 	idxm	p, a
      000084r00r12                  150 	inc	p
      000086r8Br0F                  151 	mov	a, _mbrtoc32_wc_65536_16+3
      000088r80r03                  152 	idxm	p, a
      00008A                        153 00106$:
                                    154 ;	../mbrtoc32.c: 51: return(ret);
      00008Ar90r0F                  155 	mov	a, _mbrtoc32_sloc0_1_0+1
      00008Cr80r0B                  156 	mov	p, a
      00008Er8Fr0F                  157 	mov	a, _mbrtoc32_sloc0_1_0+0
                                    158 ;	../mbrtoc32.c: 52: }
      000090 7A 00                  159 	ret
                                    160 	.area CODE
                                    161 	.area CONST
                                    162 	.area CABS (ABS)
